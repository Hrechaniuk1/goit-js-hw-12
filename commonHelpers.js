import{a as g,i as l,S as p}from"./assets/vendor-797c93b9.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(e){if(e.ep)return;e.ep=!0;const r=t(e);fetch(e.href,r)}})();const h=document.querySelector(".gallery");function f(o){const s=o.hits.map(t=>`<li class="gallery-item" data-id="${t.id}">
        <div class="img-container" >
        <a class="large-image" href="${t.largeImageURL}">
        <img class="image" src="${t.webformatURL}" alt="${t.tags}">
        </a> 
        </div>
        <ul class="description-list" >
          <li class="description-item"><p>Likes</p><p>${t.likes}</p></li>
          <li class="description-item"><p>Views</p><p>${t.views}</p></li>
          <li class="description-item"><p>Comments</p><p>${t.comments}</p></li>
          <li class="description-item"><p>Downloads</p><p>${t.downloads}</p></li>
        </ul>
      </li>`).join("");h.insertAdjacentHTML("beforeend",s)}let n=1,c;const m=async o=>{let s;o.target===document.querySelector(".more-btn")?(s=c,n+=1):(c=o.target.elements.search.value.trim(),s=c,n=1);const t=document.querySelector(".loader");t.classList.remove("is-hidden");try{const i=await g.get("https://pixabay.com/api/",{params:{key:"42614843-af27c28624474ca020601ef6c",q:s,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:15,page:n}});if(i.data.hits.length===0)l.show({message:"Sorry, there are no images matching your search query. Please try again!",backgroundColor:"red",messageColor:"white",position:"topCenter"});else{f(i.data);const a=document.querySelector(".gallery-item").getBoundingClientRect().height;if(window.scrollBy({top:a*2,left:0,behavior:"smooth"}),document.querySelector(".more-btn").classList.remove("is-hidden"),o.target===document.querySelector(".more-btn")){let u=i.data.totalHits;Math.ceil(u/15)<=n&&(document.querySelector(".more-btn").classList.add("is-hidden"),l.show({message:"We're sorry, but you've reached the end of search results.",backgroundColor:"red",messageColor:"white",position:"topCenter"}))}}t.classList.add("is-hidden"),new p(".large-image",{captionDelay:250,captionsData:"alt"}).refresh()}catch{l.show({message:"Sorry, something goes wrong!",backgroundColor:"red",messageColor:"white",position:"topCenter"})}},d=document.querySelector(".form"),y=document.querySelector(".more-btn");d.addEventListener("submit",b);function b(o){o.preventDefault(),o.target.elements.search.value===""?l.show({message:"You have to text something",backgroundColor:"red",messageColor:"white",position:"topCenter"}):(document.querySelector(".gallery").innerHTML="",m(o)),d.reset()}y.addEventListener("click",w);function w(o){m(o),console.log(itemHight*2)}
//# sourceMappingURL=commonHelpers.js.map
